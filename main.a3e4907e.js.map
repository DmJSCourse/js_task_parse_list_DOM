{"version":3,"sources":["scripts/main.js"],"names":["employees","document","getElementsByTagName","sortList","list","array","sort","first","second","formatSalary","dataset","salary","querySelector","append","string","checkingArray","split","Number","filter","element","isNaN","join","getEmployees","result","forEach","push","name","innerText","position","age"],"mappings":";AAAA,aAsCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApCA,IAAMA,EAAYC,SAASC,qBAAqB,MAEhD,SAASC,EAASC,GAAM,IAAA,EAChBC,EAAYD,EAAAA,GAElBC,EAAMC,KAAK,SAACC,EAAOC,GACjBC,OAAAA,EAAaD,EAAOE,QAAQC,QAAUF,EAAaF,EAAMG,QAAQC,WAGnEV,EAAAA,SAASW,cAAc,OAAMC,OAAUR,MAAAA,EAAAA,EAAAA,IAGzC,SAASI,EAAaK,GAChBC,IAAAA,EAAgBD,EAAOE,MAAM,IAI1BC,OAFPF,EAAgBA,EAAcG,OAAO,SAAAC,GAAW,OAACC,MAAMD,KAEhDF,OAAOF,EAAcM,KAAK,KAGnC,SAASC,EAAalB,GACdmB,IAAAA,EAAS,GAWRA,OATHnB,EAAAA,GAAMoB,QAAQ,SAAAL,GAChBI,OAAAA,EAAOE,KAAK,CACVC,KAAMP,EAAQQ,UACdC,SAAUT,EAAQT,QAAQkB,SAC1BjB,OAAQQ,EAAQT,QAAQC,OACxBkB,IAAKV,EAAQT,QAAQmB,QAIlBN,EAGTpB,EAASH,GACTsB,EAAatB","file":"main.a3e4907e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst employees = document.getElementsByTagName('li');\n\nfunction sortList(list) {\n  const array = [...list];\n\n  array.sort((first, second) =>\n    formatSalary(second.dataset.salary) - formatSalary(first.dataset.salary)\n  );\n\n  document.querySelector('ul').append(...array);\n}\n\nfunction formatSalary(string) {\n  let checkingArray = string.split('');\n\n  checkingArray = checkingArray.filter(element => !isNaN(element));\n\n  return Number(checkingArray.join(''));\n}\n\nfunction getEmployees(list) {\n  const result = [];\n\n  [...list].forEach(element =>\n    result.push({\n      name: element.innerText,\n      position: element.dataset.position,\n      salary: element.dataset.salary,\n      age: element.dataset.age,\n    })\n  );\n\n  return result;\n}\n\nsortList(employees);\ngetEmployees(employees);\n"]}